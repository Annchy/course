Homework 05.11.2021 GitHub (group 24)

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку. 
Данные для заполнения и редактирования файлов можете использовать любые, не обязательно свои.

---

4. Создать файл “new.json”:

touch new.json

---

5. Добавить файл под гит:

git add new.json

---

6. Закоммитить файл:

git commit -m "add new.json"

---

7. Отправить файл на внешний GitHub репозиторий:

git push

---

8. Создать файлы new2.json, new2.xml, new2.txt:

touch new2.json new2.xml new2.txt

---

9. Добавить файлы под гит:

git add .

---

10. Закоммитить файлы:

git commit -m "add files: new2.json, new2.txt, new2.xml"

---

11. Отправить файлы на внешний GitHub репозиторий:

git push

---

12. Отредактировать содержание файла “new2.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата):

nano new2.txt ->

name: Ann
age: 23
pets: no pets
salary: 1000$

ctrl+s -> ctrl+x

---

13. Отредактировать содержание файла “new2.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON:

nano new2.json ->

{
    "name":"Ann",
    "age":23,
    "pets":"no pets",
    "salary":"1000$"
}

ctrl+s -> ctrl+x

---

14. Добавить и закоммитить “new2.txt” одной строчкой:

git add new2.txt && git commit -m "edit file: new2.txt"

---

15. Добавить и закоммитить “new2.json” одной строчкой:

git add new2.json && git commit -m "edit file: new2.json"

---

16. Отправить изменения на внешний репозиторий:

git push

---

17. Отредактировать содержание файла “new2.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). 
Всё написать в формате XML:

nano new2.xml ->

<?xml version="1.0"?>
<Info>
    <name>Ann</name>
    <age>23</age>
    <pets>no pets</pets>
    <salary>1000$</salary>
</Info>

ctrl+s -> ctrl+x

---

18. Добавить и закоммитить “new2.xml” одной строчкой:

git commit -am "edit file: new2.xml"

---

19. Отправить изменения на внешний репозиторий:

git push

---

21. В веб интерфейсе GitHub создать файл new3.txt:

Нажать "Add file" -> нажать "Create new file" -> ввести название "new3.txt"

---

22. Отредактировать в веб интерфейсе содержание файла “new3.txt” - написать информацию о своих предпочтениях 
(Любимый фильм, любимая еда, любимое время года, страна которую хотели бы посетить):

Ввести информацию:

Preferences:
  movie: Prestige
  food: potatoes
  season: summer
  country: Japan

---

23. Сделать Commit changes (сохранить) изменения на веб интерфейсе:

Добавить комментарий "add file: new3.txt" -> нажать "Commit new file"

---

24. Синхронизировать внешний и локальный репозитории (слить изменения с внешнего репозитория):

git pull

---

25. Отредактировать в веб интерфейсе содержание файла “new2.json” - добавить информацию о своих предпочтениях 
(Любимый фильм, любимая еда, любимое время года, страна которую хотели бы посетить). Всё в формате JSON:

Выбрать файл "new2.json" -> нажать "Edit this file" -> добавить информацию:

{	...
    "preferences": {
        "movie":"Prestige",
        "food":"potatoes",
        "season":"summer",
        "country":"Japan",
      }
}

---

26. Сделать Commit changes (сохранить) изменения на веб интерфейсе:

Добавить комментарий "edit file: new2.json" -> нажать "Commit changes"

---

27. Синхронизировать внешний и локальный репозитории:

git pull

---

28. Отредактировать в веб интерфейсе содержание файла “new2.xml” - добавить информацию о своих предпочтениях 
(Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить). Всё в формате XML:

Выбрать файл "new2.xml" -> нажать "Edit this file" -> добавить информацию:

<?xml version="1.0"?>
<Info>
	...
    <Preferences>
        <movie>Prestige</movie>
        <food>potatoes</food>
        <season>summer</season>
        <country>Japan</country>
    </Preferences>
</Info>

---

29. Сделать Commit changes (сохранить) изменения на веб интерфейсе:

Добавить комментарий "edit file: new2.xml" -> нажать "Commit changes"

---

30. Синхронизировать внешний и локальный репозитории:

git pull
